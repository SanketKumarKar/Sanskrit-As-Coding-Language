# Sanskrit to Python Transpiler Demo
from transpiler import simple_transpile as transpile, run_sanskrit_code

# Demo showing comprehensive Sanskrit programming
demo_code = [
    "рдЯрд┐рдкреНрдкрдгреА: рд╕рдВрд╕реНрдХреГрдд рдкреНрд░реЛрдЧреНрд░рд╛рдорд┐рдВрдЧ рднрд╛рд╖рд╛ рдХрд╛ рдЙрджрд╛рд╣рд░рдг",
    "рдЖрдпрд╛рдд sqrt рд╕реЗ math",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рд╡реЗрд░рд┐рдПрдмрд▓реНрд╕ рдФрд░ рдбреЗрдЯрд╛ рдЯрд╛рдЗрдкреНрд╕",
    "рд╕рдВрдЦреНрдпрд╛рдПрдВ = [1, 2, 3, 4, 5]",
    "рдирд╛рдо_рд╕реВрдЪреА = ['рд░рд╛рдо', 'рд╕реАрддрд╛', 'рд▓рдХреНрд╖реНрдордг']",
    "рд╡реНрдпрдХреНрддрд┐_рдЬрд╛рдирдХрд╛рд░реА = {'рдирд╛рдо': 'рд░рд╛рдо', 'рдЙрдореНрд░': 25}",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рдХрдВрдЯреНрд░реЛрд▓ рдлреНрд▓реЛ",
    "рдпрджрд┐ рд▓рдВрдмрд╛рдИ(рд╕рдВрдЦреНрдпрд╛рдПрдВ) > 3:",
    "    рдкреНрд░рджрд░реНрд╢рдп('рд╕реВрдЪреА рдореЗрдВ рддреАрди рд╕реЗ рдЕрдзрд┐рдХ рддрддреНрд╡ рд╣реИрдВ')",
    "рдЕрдиреНрдпрдерд╛:",
    "    рдкреНрд░рджрд░реНрд╢рдп('рд╕реВрдЪреА рдЫреЛрдЯреА рд╣реИ')",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рд▓реВрдкреНрд╕",
    "рдХреЗ рд▓рд┐рдпреЗ рдирд╛рдо рдореЗрдВ рдирд╛рдо_рд╕реВрдЪреА:",
    "    рдкреНрд░рджрд░реНрд╢рдп('рдирдорд╕реНрддреЗ,', рдирд╛рдо)",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рдлрдВрдХреНрд╢рди рдкрд░рд┐рднрд╛рд╖рд╛",
    "рдкрд░рд┐рднрд╛рд╖рд┐рдд рд╡рд░реНрдЧрдореВрд▓_рдЧрдгрдирд╛(рдЕрдВрдХ):",
    "    рд▓реМрдЯрд╛рдПрдБ sqrt(рдЕрдВрдХ)",
    "",
    "рдкрд░рд┐рднрд╛рд╖рд┐рдд рдпреЛрдЧ_рдЧрдгрдирд╛(рд╕реВрдЪреА):",
    "    рдпреЛрдЧ = 0",
    "    рдХреЗ рд▓рд┐рдпреЗ рдЕрдВрдХ рдореЗрдВ рд╕реВрдЪреА:",
    "        рдпреЛрдЧ = рдпреЛрдЧ + рдЕрдВрдХ",
    "    рд▓реМрдЯрд╛рдПрдБ рдпреЛрдЧ",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рдлрдВрдХреНрд╢рди рдХреЙрд▓реНрд╕",
    "рдкреНрд░рджрд░реНрд╢рдп('16 рдХрд╛ рд╡рд░реНрдЧрдореВрд▓:', рд╡рд░реНрдЧрдореВрд▓_рдЧрдгрдирд╛(16))",
    "рдкреНрд░рджрд░реНрд╢рдп('рд╕реВрдЪреА рдХрд╛ рдпреЛрдЧ:', рдпреЛрдЧ_рдЧрдгрдирд╛(рд╕рдВрдЦреНрдпрд╛рдПрдВ))",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рдХреНрд▓рд╛рд╕ рдкрд░рд┐рднрд╛рд╖рд╛",
    "рд╡рд░реНрдЧ рдЫрд╛рддреНрд░:",
    "    рдкрд░рд┐рднрд╛рд╖рд┐рдд рдЖрд░рдВрдн(рд╕реНрд╡рдпрдВ, рдирд╛рдо, рдЙрдореНрд░):",
    "        рд╕реНрд╡рдпрдВ.рдирд╛рдо = рдирд╛рдо",
    "        рд╕реНрд╡рдпрдВ.рдЙрдореНрд░ = рдЙрдореНрд░",
    "    ",
    "    рдкрд░рд┐рднрд╛рд╖рд┐рдд рдкрд░рд┐рдЪрдп(рд╕реНрд╡рдпрдВ):",
    "        рдкреНрд░рджрд░реНрд╢рдп('рдореЗрд░рд╛ рдирд╛рдо', рд╕реНрд╡рдпрдВ.рдирд╛рдо, 'рд╣реИ рдФрд░ рдореИрдВ', рд╕реНрд╡рдпрдВ.рдЙрдореНрд░, 'рд╕рд╛рд▓ рдХрд╛ рд╣реВрдБ')",
    "",
    "рдЫрд╛рддреНрд░1 = рдЫрд╛рддреНрд░('рдЕрд░реНрдЬреБрди', 20)",
    "рдЫрд╛рддреНрд░1.рдкрд░рд┐рдЪрдп()",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рдПрдХреНрд╕реЗрдкреНрд╢рди рд╣реИрдВрдбрд▓рд┐рдВрдЧ",
    "рдХреЛрд╢рд┐рд╢:",
    "    рдкрд░рд┐рдгрд╛рдо = 10 / 0",
    "рдкрдХрдбрд╝реЗрдВ ZeroDivisionError:",
    "    рдкреНрд░рджрд░реНрд╢рдп('рддреНрд░реБрдЯрд┐: рд╢реВрдиреНрдп рд╕реЗ рднрд╛рдЧ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛')",
    "рдЕрдВрддрддрдГ:",
    "    рдкреНрд░рджрд░реНрд╢рдп('рдЧрдгрдирд╛ рдкреВрд░реНрдг')",
    "",
    "рдЯрд┐рдкреНрдкрдгреА: рдХреЙрдиреНрдЯреЗрдХреНрд╕реНрдЯ рдореИрдиреЗрдЬрд░",
    "рдЖрд╕рдкрд╛рд╕ рдЦреЛрд▓реЗрдВ('рд╕рдВрджреЗрд╢.txt', 'w') рдЬреИрд╕рд╛ рдлрд╝рд╛рдЗрд▓:",
    "    рдлрд╝рд╛рдЗрд▓.write('рдпрд╣ рд╕рдВрд╕реНрдХреГрдд рдореЗрдВ рд▓рд┐рдЦрд╛ рдЧрдпрд╛ рд╣реИ!')",
    "",
    "рдкреНрд░рджрд░реНрд╢рдп('рдкреНрд░реЛрдЧреНрд░рд╛рдо рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреВрд░рд╛ рд╣реБрдЖ!')"
]

if __name__ == "__main__":
    print("ЁЯХЙя╕П  рд╕рдВрд╕реНрдХреГрдд-рдкрд╛рдпрдерди рдЯреНрд░рд╛рдВрд╕рдкрд╛рдЗрд▓рд░ рдбреЗрдореЛ  ЁЯХЙя╕П")
    print("=" * 50)
    print("\nЁЯУЭ рдореВрд▓ рд╕рдВрд╕реНрдХреГрдд рдХреЛрдб:")
    print("-" * 30)
    for line in demo_code:
        print(line)
    
    print("\nЁЯФД рдЯреНрд░рд╛рдВрд╕рдкрд╛рдЗрд▓реНрдб рдкрд╛рдпрдерди рдХреЛрдб:")
    print("-" * 30)
    run_sanskrit_code(demo_code)
